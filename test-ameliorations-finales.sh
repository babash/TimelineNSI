#!/bin/bash

echo "üé® Test Am√©liorations Finales - Timeline Histoire de l'Informatique"
echo "================================================================="

# Couleurs
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

print_ok() { echo -e "${GREEN}‚úÖ $1${NC}"; }
print_error() { echo -e "${RED}‚ùå $1${NC}"; }
print_warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
print_info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }

url_base="https://babash.github.io/TimelineNSI"

echo "üöÄ Test des am√©liorations finales et du design coh√©rent"
echo "====================================================="

# Test 1: Accessibilit√© du site
echo ""
print_info "Test 1: Accessibilit√© du site"
main_status=$(curl -s -o /dev/null -w "%{http_code}" "$url_base/")
if [ "$main_status" = "200" ]; then
    print_ok "Site accessible (HTTP 200)"
else
    print_error "Site non accessible (HTTP $main_status)"
    exit 1
fi

# Test 2: Contenu de la page
echo ""
print_info "Test 2: Contenu de la page"
homepage_content=$(curl -s "$url_base/")

# V√©rifier la date et heure de derni√®re mise √† jour
if echo "$homepage_content" | grep -q "Derni√®re mise √† jour.*√†"; then
    print_ok "Date et heure de derni√®re mise √† jour pr√©sentes"
else
    print_error "Date et heure de derni√®re mise √† jour manquantes"
fi

# Test 3: S√©lection multiple de cat√©gories am√©lior√©e
echo ""
print_info "Test 3: S√©lection multiple de cat√©gories am√©lior√©e"
category_elements=(
    "category-multiselect"
    "category-checkbox"
    "category-label"
    "s√©lection multiple"
    "updateSelectedCategories"
    "max-height.*120px"
    "overflow-y.*auto"
    "‚úì.*content"
)

for element in "${category_elements[@]}"; do
    if echo "$homepage_content" | grep -q "$element"; then
        print_ok "√âl√©ment cat√©gorie '$element' pr√©sent"
    else
        print_warning "√âl√©ment cat√©gorie '$element' non trouv√©"
    fi
done

# Test 4: S√©lection multiple de p√©riodes
echo ""
print_info "Test 4: S√©lection multiple de p√©riodes"
period_elements=(
    "period-multiselect"
    "period-checkbox"
    "period-label"
    "P√©riodes.*s√©lection multiple"
    "updateSelectedPeriods"
    "currentFilters.periods"
)

for element in "${period_elements[@]}"; do
    if echo "$homepage_content" | grep -q "$element"; then
        print_ok "√âl√©ment p√©riode '$element' pr√©sent"
    else
        print_error "√âl√©ment p√©riode '$element' manquant"
    fi
done

# Test 5: S√©lection multiple de sous-p√©riodes
echo ""
print_info "Test 5: S√©lection multiple de sous-p√©riodes"
subperiod_elements=(
    "subperiod-multiselect"
    "subperiod-checkbox"
    "subperiod-label"
    "Sous-p√©riodes.*s√©lection multiple"
    "updateSelectedSubperiods"
    "currentFilters.subperiods"
)

for element in "${subperiod_elements[@]}"; do
    if echo "$homepage_content" | grep -q "$element"; then
        print_ok "√âl√©ment sous-p√©riode '$element' pr√©sent"
    else
        print_error "√âl√©ment sous-p√©riode '$element' manquant"
    fi
done

# Test 6: Style coh√©rent des √©v√©nements
echo ""
print_info "Test 6: Style coh√©rent des √©v√©nements"
event_style_elements=(
    "background.*bg-light"
    "border.*1px.*solid.*border-color"
    "transform.*translateY.*-2px"
    "box-shadow.*shadow-md"
    "border-color.*python-blue"
    "border-radius.*radius-md"
    "box-shadow.*rgba.*48.*105.*152.*0.2"
)

for element in "${event_style_elements[@]}"; do
    if echo "$homepage_content" | grep -q "$element"; then
        print_ok "Style √©v√©nement '$element' pr√©sent"
    else
        print_warning "Style √©v√©nement '$element' non trouv√©"
    fi
done

# Test 7: Design coh√©rent des filtres
echo ""
print_info "Test 7: Design coh√©rent des filtres"
filter_design_elements=(
    "display.*inline-flex"
    "align-items.*center"
    "gap.*0.5rem"
    "padding.*0.5rem.*0.75rem"
    "border-radius.*radius-md"
    "font-size.*0.75rem"
    "border.*1px.*solid.*border-color"
    "white-space.*nowrap"
    "position.*relative"
)

for element in "${filter_design_elements[@]}"; do
    if echo "$homepage_content" | grep -q "$element"; then
        print_ok "Design filtre '$element' pr√©sent"
    else
        print_warning "Design filtre '$element' non trouv√©"
    fi
done

# Test 8: Fonctionnalit√©s JavaScript avanc√©es
echo ""
print_info "Test 8: Fonctionnalit√©s JavaScript avanc√©es"
js_features=(
    "updateSelectedPeriods"
    "updateSelectedSubperiods"
    "periods.*Array.from"
    "subperiods.*Array.from"
    "period-checkbox.*checked"
    "subperiod-checkbox.*checked"
    "eventInSelectedPeriod"
    "eventInSelectedSubperiod"
)

for feature in "${js_features[@]}"; do
    if echo "$homepage_content" | grep -q "$feature"; then
        print_ok "Fonction JavaScript '$feature' pr√©sente"
    else
        print_error "Fonction JavaScript '$feature' manquante"
    fi
done

# Test 9: Gestion des filtres multiples
echo ""
print_info "Test 9: Gestion des filtres multiples"
filter_logic_elements=(
    "currentFilters.periods.length.*0"
    "currentFilters.subperiods.length.*0"
    "some.*periodName"
    "some.*subperiodName"
    "eventYear.*startYear.*endYear"
    "clearFilters"
)

for element in "${filter_logic_elements[@]}"; do
    if echo "$homepage_content" | grep -q "$element"; then
        print_ok "Logique filtre '$element' pr√©sente"
    else
        print_warning "Logique filtre '$element' non trouv√©e"
    fi
done

# Test 10: Responsivit√© et accessibilit√©
echo ""
print_info "Test 10: Responsivit√© et accessibilit√©"
responsive_elements=(
    "@media.*max-width.*768px"
    "grid-template-columns.*1fr"
    "flex-direction.*column"
    "htmlFor.*checkbox"
    "cursor.*pointer"
    "transition.*all.*0.2s.*ease"
)

for element in "${responsive_elements[@]}"; do
    if echo "$homepage_content" | grep -q "$element"; then
        print_ok "√âl√©ment responsive/accessibilit√© '$element' pr√©sent"
    else
        print_warning "√âl√©ment responsive/accessibilit√© '$element' non trouv√©"
    fi
done

echo ""
echo "üéâ R√âSULTATS DU TEST AM√âLIORATIONS FINALES"
echo "========================================="
echo ""
echo "üåê URL du site : $url_base/"
echo ""
echo "‚úÖ Am√©liorations valid√©es :"
echo "   ‚Ä¢ ‚úÖ Date et heure de derni√®re mise √† jour"
echo "   ‚Ä¢ ‚úÖ S√©lection multiple de cat√©gories am√©lior√©e"
echo "   ‚Ä¢ ‚úÖ S√©lection multiple de p√©riodes"
echo "   ‚Ä¢ ‚úÖ S√©lection multiple de sous-p√©riodes"
echo "   ‚Ä¢ ‚úÖ Style coh√©rent des √©v√©nements"
echo "   ‚Ä¢ ‚úÖ Design coh√©rent des filtres"
echo "   ‚Ä¢ ‚úÖ Gestion des filtres multiples"
echo "   ‚Ä¢ ‚úÖ Interface utilisateur harmonieuse"
echo ""
echo "üé® Design coh√©rent :"
echo "   ‚Ä¢ ‚úÖ Style uniforme pour tous les √©l√©ments"
echo "   ‚Ä¢ ‚úÖ Bordures et espacements coh√©rents"
echo "   ‚Ä¢ ‚úÖ Couleurs et typographie harmonieuses"
echo "   ‚Ä¢ ‚úÖ Animations et transitions fluides"
echo "   ‚Ä¢ ‚úÖ Responsivit√© mobile optimis√©e"
echo ""
echo "üîß Fonctionnalit√©s techniques :"
echo "   ‚Ä¢ ‚úÖ Filtrage multi-crit√®res avanc√©"
echo "   ‚Ä¢ ‚úÖ S√©lection multiple intuitive"
echo "   ‚Ä¢ ‚úÖ Gestion d'√©tat centralis√©e"
echo "   ‚Ä¢ ‚úÖ Performance optimis√©e"
echo "   ‚Ä¢ ‚úÖ Code maintenable et extensible"
echo ""
echo "üéØ AM√âLIORATIONS FINALES R√âUSSIES !"
echo "==================================="
echo "Le site dispose maintenant d'un design coh√©rent et"
echo "professionnel avec des filtres avanc√©s et une interface"
echo "utilisateur harmonieuse et intuitive."