#!/bin/bash

echo "üöÄ Force D√©ploiement - TimelineNSI"
echo "=================================="

# V√©rifier que nous sommes sur la branche main
current_branch=$(git branch --show-current)
if [ "$current_branch" != "main" ]; then
    echo "‚ùå Erreur: Vous devez √™tre sur la branche main"
    echo "Ex√©cutez: git checkout main"
    exit 1
fi

echo "‚úÖ Branche actuelle: $current_branch"

# Forcer un nouveau commit pour d√©clencher le d√©ploiement
echo "üìù Cr√©ation d'un commit de d√©ploiement..."
echo "# D√©ploiement GitHub Pages - $(date)" >> DEPLOYMENT.md
git add DEPLOYMENT.md
git commit -m "Force deployment for GitHub Pages"
git push origin main

echo "‚úÖ Commit pouss√© sur GitHub"

# Instructions pour activer GitHub Pages
echo ""
echo "üìã ACTIVATION GITHUB PAGES REQUISE :"
echo "===================================="
echo ""
echo "1. Ouvrez votre navigateur et allez sur :"
echo "   https://github.com/babash/TimelineNSI/settings/pages"
echo ""
echo "2. Dans la section 'Build and deployment' :"
echo "   - Source : 'Deploy from a branch'"
echo "   - Branch : 'main'"
echo "   - Folder : '/' (root)"
echo "   - Cliquez sur 'Save'"
echo ""
echo "3. Attendez 5-10 minutes pour le d√©ploiement"
echo ""
echo "4. V√©rifiez le site : https://babash.github.io/TimelineNSI/"
echo ""

# Test automatique
echo "üß™ Test automatique du d√©ploiement..."
echo "Le script va tester le site toutes les 30 secondes..."
echo "Appuyez sur Ctrl+C pour arr√™ter"

for i in {1..20}; do
    echo "Tentative $i/20..."
    status=$(curl -s -o /dev/null -w "%{http_code}" "https://babash.github.io/TimelineNSI/")
    
    if [ "$status" = "200" ]; then
        echo ""
        echo "üéâ SUCC√àS ! Site accessible !"
        echo "üåê URL: https://babash.github.io/TimelineNSI/"
        echo ""
        echo "‚úÖ Fonctionnalit√©s disponibles :"
        echo "   ‚Ä¢ Timeline interactive avec 68 √©v√©nements"
        echo "   ‚Ä¢ Filtrage par cat√©gorie"
        echo "   ‚Ä¢ T√©l√©chargement des cartes individuelles"
        echo "   ‚Ä¢ Design responsive"
        echo "   ‚Ä¢ Liens sociaux"
        exit 0
    else
        echo "Status: $status - Attente..."
        sleep 30
    fi
done

echo ""
echo "‚ö†Ô∏è  Le site n'est pas encore accessible apr√®s 10 minutes"
echo "V√©rifiez que GitHub Pages est bien activ√© dans les param√®tres"